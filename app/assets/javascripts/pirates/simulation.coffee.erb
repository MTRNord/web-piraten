
class @Simulation
  @initialize = () ->
    # load elements
    @canvas = document.getElementById "pirateGrid"
    @context = @canvas.getContext "2d"

    @speed = Math.round Config.maxSimulationSpeed/2 # overriden by load
    Grid.initialize @canvas, 32
    Grid.loadDefault()
    CodeGUI.initialize 'codemirror'
    PacketHandler.initialize()

    @isSimulating = false

    #main loop
    @lastRun = 0
    @stopRedrawing = false
    @showFps = false

    $(document).on 'mousemove', (event) =>
      if !@mouse?
        @mouse = new Coordinate 0,0
      @mouse.x = event.clientX || event.pageX
      @mouse.y = event.clientY || event.pageY

    $('#save-code').click (event) ->
      @href = 'data:text/plain;charset=UTF-8,'
      @href += encodeURIComponent CodeGUI.getCode()
    $('#save-grid').click (event) ->
      @href = 'data:text/plain;charset=UTF-8,'
      @href += encodeURIComponent JSON.stringify(Grid.serialize())

    $('#load-code').click () ->
      Utils.createFileUpload {
          fileExtension: 'rb'
          onSuccess: (fileContent) ->
            CodeGUI.setCode fileContent
            # close modal
            $('#serialization-modal').modal('hide')
          onInvalidFile: () ->
            alert 'Keine .rb Datei!'
      }

    $('#load-grid').click () ->
      Utils.createFileUpload {
        fileExtension: 'world'
        onSuccess: (fileContent) ->
          serialized = JSON.parse fileContent
          Grid.load serialized
          # close modal
          $('#serialization-modal').modal('hide')
        onInvalidFile: () ->
          alert 'Keine .world Datei!'
      }

    $(window).on 'beforeunload', (event) =>
      event = event || window.event
      if localStorage?
        serialized = JSON.stringify @serialize()
        localStorage.setItem 'simulation', serialized

    if localStorage?
      data = localStorage.getItem 'simulation'
      if data?
        @load JSON.parse(data)

  @mainLoop = () =>
    @now = new Date().getTime()
    @deltaTime = (@now - @lastRun)/1000
    @lastRun = @now


    Utils.requestAnimFrame @mainLoop
    if(@stopRedrawing)
      return

    # clear screen
    @context.clearRect 0, 0, @context.canvas.width, @context.canvas.height

    if(@showFps)
      @fps = 1/@deltaTime
      @context.fillStyle = "Black"
      @context.font      = "normal 12pt Arial"
      @context.fillText Math.round(@fps)+" fps", 10, 20

    #@operationHandler.update();
    PacketHandler.update()
    Grid.update()
    Grid.draw()


  @getLinksToPreload = () ->
    [
      "<%= javascript_path 'websocket_rails/main' %>"
      "<%= javascript_path 'codemirror' %>"
      "<%= javascript_path 'codemirror/addons/selection/active-line' %>"
      "<%= javascript_path 'codemirror/modes/ruby' %>"
      "<%= javascript_path 'codemirror/keymaps/sublime' %>"
      "<%= javascript_path 'jquery.ui.effect.js' %>"
      "<%= javascript_path 'jquery.ui.slider' %>"
      "<%= javascript_path 'pirates/config' %>"
      "<%= javascript_path 'pirates/utilities' %>"
      "<%= javascript_path 'pirates/console' %>"
      "<%= javascript_path 'pirates/socketHandler' %>"
      "<%= javascript_path 'pirates/gameObjects' %>"
      "<%= javascript_path 'pirates/codegui' %>"
      "<%= javascript_path 'pirates/grid' %>"
    ]


  @preload = (callback) =>
    loaded = 0
    links = @getLinksToPreload()
    for i in [0...links.length]
      currentLink = links[i]
      $.getScript currentLink , () =>
        loaded += 1
        if loaded >= links.length
           @preloadImage callback

  @preloadImage = (callback) =>
    loaded = 0
    images = Config.getImagesToPreload()
    for i in [0...images.length]
      currentImage = images[i]
      $('<img />').attr('src', currentImage).load () ->
        loaded += 1
        $(this).appendTo '#imagePreloader'
        if loaded >= images.length
          callback()


  @start = () =>
    throw 'already started' if @isSimulating
    clear()
    CodeGUI.toggleCodeEditing()
    @isSimulating = true
    Console.clear()
    CodeGUI.WatchList.clearAllocations()

    webSocket.trigger "simulateGrid", @serialize()

  @stop = () =>
    throw 'already stopped' unless @isSimulating
    @isSimulating = false
    clear()
    CodeGUI.toggleCodeEditing()
    webSocket.trigger 'stop'

  clear = () ->
    CodeGUI.clearHighlighting()
    PacketHandler.clear()
    Grid.look = null

  @serialize = () ->
    {
      code: CodeGUI.getCode()
      grid: Grid.serialize()
      vars: CodeGUI.WatchList.get()
      speed: @speed
    }

  @load = (obj) ->
    clear()
    throw 'obj null' unless obj?
    CodeGUI.setCode obj.code if obj.code?

    Grid.load obj.grid if obj.grid?
    if obj.vars?
      CodeGUI.WatchList.clear()
      for key of obj.vars
        CodeGUI.WatchList.addVariable obj.vars[key]

    Grid.GridControls.setSpeed obj.speed if obj.speed?


jQuery () -> # use jQuery to wait until DOM is ready

  Simulation.preload () -> # firefox won't draw without
    Simulation.initialize()
    Simulation.mainLoop()

